# Generated by Django 4.2.24 on 2025-09-25 13:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import openforms.registrations.contrib.zgw_apis.models
import openforms.template.validators
import openforms.utils.validators


class Migration(migrations.Migration):
    replaces = [
        ("zgw_apis", "0001_initial_to_v280"),
        ("zgw_apis", "0015_explicit_objects_api_groups"),
        ("zgw_apis", "0016_zgwapigroupconfig_identifier"),
        ("zgw_apis", "0017_alter_zgwapigroupconfig_identifier"),
        ("zgw_apis", "0018_alter_zgwapigroupconfig_drc_service_and_more"),
        ("zgw_apis", "0019_alter_zgwapigroupconfig_catalogue_domain"),
        ("zgw_apis", "0019_alter_zgwapigroupconfig_auteur"),
        ("zgw_apis", "0020_merge_20250204_1209"),
        ("zgw_apis", "0015_delete_zgwconfig"),
        ("zgw_apis", "0019_merge_20250317_1606"),
        ("zgw_apis", "0021_merge_20250317_1609"),
    ]

    dependencies = [
        ("registrations_objects_api", "0001_initial_to_v267"),
        ("zgw_consumers", "0022_set_default_service_slug"),
        ("forms", "0097_v267_to_v270"),
    ]

    operations = [
        migrations.CreateModel(
            name="ZGWApiGroupConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A recognisable name for this set of ZGW APIs.",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "organisatie_rsin",
                    models.CharField(
                        blank=True,
                        help_text="Default RSIN of organization, which creates the ZAAK",
                        max_length=9,
                        validators=[openforms.utils.validators.RSINValidator()],
                        verbose_name="organisation RSIN",
                    ),
                ),
                (
                    "zaak_vertrouwelijkheidaanduiding",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("openbaar", "Openbaar"),
                            ("beperkt_openbaar", "Beperkt openbaar"),
                            ("intern", "Intern"),
                            ("zaakvertrouwelijk", "Zaakvertrouwelijk"),
                            ("vertrouwelijk", "Vertrouwelijk"),
                            ("confidentieel", "Confidentieel"),
                            ("geheim", "Geheim"),
                            ("zeer_geheim", "Zeer geheim"),
                        ],
                        help_text="Indication of the level to which extend the ZAAK is meant to be public. Can be overridden in the Registration tab of a given form.",
                        max_length=24,
                        verbose_name="vertrouwelijkheidaanduiding zaak",
                    ),
                ),
                (
                    "doc_vertrouwelijkheidaanduiding",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("openbaar", "Openbaar"),
                            ("beperkt_openbaar", "Beperkt openbaar"),
                            ("intern", "Intern"),
                            ("zaakvertrouwelijk", "Zaakvertrouwelijk"),
                            ("vertrouwelijk", "Vertrouwelijk"),
                            ("confidentieel", "Confidentieel"),
                            ("geheim", "Geheim"),
                            ("zeer_geheim", "Zeer geheim"),
                        ],
                        help_text="Indication of the level to which extend the document associated with the ZAAK is meant to be public. Can be overridden in the file upload component of a given form.",
                        max_length=24,
                        verbose_name="vertrouwelijkheidaanduiding document",
                    ),
                ),
                (
                    "auteur",
                    models.CharField(
                        default="Aanvrager",
                        help_text="The value of the `author` field for documents that will be created in Documenten API.",
                        max_length=200,
                        verbose_name="auteur",
                    ),
                ),
                (
                    "drc_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "drc"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="zgwset_drc_config",
                        to="zgw_consumers.service",
                        verbose_name="Documenten API",
                    ),
                ),
                (
                    "zrc_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "zrc"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="zgwset_zrc_config",
                        to="zgw_consumers.service",
                        verbose_name="Zaken API",
                    ),
                ),
                (
                    "ztc_service",
                    models.ForeignKey(
                        limit_choices_to={"api_type": "ztc"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="zgwset_ztc_config",
                        to="zgw_consumers.service",
                        verbose_name="Catalogi API",
                    ),
                ),
                (
                    "content_json",
                    models.TextField(
                        blank=True,
                        default=openforms.registrations.contrib.zgw_apis.models.get_content_text,
                        help_text="This template is evaluated with the submission data and the resulting JSON is sent to the objects API.",
                        validators=[
                            openforms.template.validators.DjangoTemplateValidator(
                                backend="openforms.template.openforms_backend"
                            )
                        ],
                        verbose_name="objects API - JSON content template",
                    ),
                ),
                (
                    "catalogue_domain",
                    models.CharField(
                        blank=True,
                        help_text="The 'domein' attribute for the Catalogus resource in the Catalogi API.",
                        max_length=5,
                        verbose_name="catalogus domain",
                    ),
                ),
                (
                    "catalogue_rsin",
                    models.CharField(
                        blank=True,
                        help_text="The 'rsin' attribute for the Catalogus resource in the Catalogi API.",
                        max_length=9,
                        validators=[openforms.utils.validators.RSINValidator()],
                        verbose_name="catalogus RSIN",
                    ),
                ),
                (
                    "identifier",
                    models.SlugField(
                        help_text="A unique, human-friendly identifier to identify this group.",
                        unique=True,
                        verbose_name="identifier",
                    ),
                ),
            ],
            options={
                "verbose_name": "ZGW API set",
                "verbose_name_plural": "ZGW API sets",
            },
        ),
        migrations.AddConstraint(
            model_name="zgwapigroupconfig",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("catalogue_domain", ""), ("catalogue_rsin", "")),
                    models.Q(
                        models.Q(("catalogue_domain", ""), _negated=True),
                        models.Q(("catalogue_rsin", ""), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="registrations_zgw_apis_catalogue_composite_key",
                violation_error_message="You must specify both domain and RSIN to uniquely identify a catalogue.",
            ),
        ),
    ]
